### YamlMime:ManagedReference
items:
- uid: Benday.Presentation.ViewModelField`1
  commentId: T:Benday.Presentation.ViewModelField`1
  id: ViewModelField`1
  parent: Benday.Presentation
  children:
  - Benday.Presentation.ViewModelField`1.#ctor
  - Benday.Presentation.ViewModelField`1.#ctor(`0)
  - Benday.Presentation.ViewModelField`1.IsEnabled
  - Benday.Presentation.ViewModelField`1.IsValid
  - Benday.Presentation.ViewModelField`1.IsVisible
  - Benday.Presentation.ViewModelField`1.OnValueChanged
  - Benday.Presentation.ViewModelField`1.RaiseOnValueChanged
  - Benday.Presentation.ViewModelField`1.ToString
  - Benday.Presentation.ViewModelField`1.ValidationMessage
  - Benday.Presentation.ViewModelField`1.Value
  langs:
  - csharp
  - vb
  name: ViewModelField<T>
  nameWithType: ViewModelField<T>
  fullName: Benday.Presentation.ViewModelField<T>
  type: Class
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: ViewModelField
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 19
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: >-
    View model class that represents a field on a form. For example, "FirstName", "LastName", "Age", or "BirthDate".

    It provides properties for validation, visibility, and enabled. If you're using Benday.Presentation.Controls, 

    those field controls will bind to the properties on this class with a single, simple binding expression.
  example: []
  syntax:
    content: 'public class ViewModelField<T> : ViewModelBase, INotifyPropertyChanged, IVisibleField'
    typeParameters:
    - id: T
      description: Data type being wrapped by this field. Typically types like int, string, DateTime, etc.
    content.vb: Public Class ViewModelField(Of T) Inherits ViewModelBase Implements INotifyPropertyChanged, IVisibleField
  inheritance:
  - System.Object
  - Benday.Presentation.ViewModelBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - Benday.Presentation.IVisibleField
  inheritedMembers:
  - Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  - Benday.Presentation.ViewModelBase.PropertyChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: ViewModelField(Of T)
  fullName.vb: Benday.Presentation.ViewModelField(Of T)
  name.vb: ViewModelField(Of T)
- uid: Benday.Presentation.ViewModelField`1.#ctor
  commentId: M:Benday.Presentation.ViewModelField`1.#ctor
  id: '#ctor'
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: ViewModelField()
  nameWithType: ViewModelField<T>.ViewModelField()
  fullName: Benday.Presentation.ViewModelField<T>.ViewModelField()
  type: Constructor
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: .ctor
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 21
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: public ViewModelField()
    content.vb: Public Sub New()
  overload: Benday.Presentation.ViewModelField`1.#ctor*
  nameWithType.vb: ViewModelField(Of T).New()
  fullName.vb: Benday.Presentation.ViewModelField(Of T).New()
  name.vb: New()
- uid: Benday.Presentation.ViewModelField`1.#ctor(`0)
  commentId: M:Benday.Presentation.ViewModelField`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: ViewModelField(T)
  nameWithType: ViewModelField<T>.ViewModelField(T)
  fullName: Benday.Presentation.ViewModelField<T>.ViewModelField(T)
  type: Constructor
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: .ctor
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 29
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: public ViewModelField(T initialValue)
    parameters:
    - id: initialValue
      type: '{T}'
    content.vb: Public Sub New(initialValue As T)
  overload: Benday.Presentation.ViewModelField`1.#ctor*
  nameWithType.vb: ViewModelField(Of T).New(T)
  fullName.vb: Benday.Presentation.ViewModelField(Of T).New(T)
  name.vb: New(T)
- uid: Benday.Presentation.ViewModelField`1.Value
  commentId: P:Benday.Presentation.ViewModelField`1.Value
  id: Value
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ViewModelField<T>.Value
  fullName: Benday.Presentation.ViewModelField<T>.Value
  type: Property
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Value
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 39
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets or sets the Value of this field. This observable property.
  example: []
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: Benday.Presentation.ViewModelField`1.Value*
  nameWithType.vb: ViewModelField(Of T).Value
  fullName.vb: Benday.Presentation.ViewModelField(Of T).Value
- uid: Benday.Presentation.ViewModelField`1.OnValueChanged
  commentId: E:Benday.Presentation.ViewModelField`1.OnValueChanged
  id: OnValueChanged
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: OnValueChanged
  nameWithType: ViewModelField<T>.OnValueChanged
  fullName: Benday.Presentation.ViewModelField<T>.OnValueChanged
  type: Event
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: OnValueChanged
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 83
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Event raised when the Value property changes on this field.
  example: []
  syntax:
    content: public event EventHandler? OnValueChanged
    return:
      type: System.EventHandler
    content.vb: Public Event OnValueChanged As EventHandler
  nameWithType.vb: ViewModelField(Of T).OnValueChanged
  fullName.vb: Benday.Presentation.ViewModelField(Of T).OnValueChanged
- uid: Benday.Presentation.ViewModelField`1.RaiseOnValueChanged
  commentId: M:Benday.Presentation.ViewModelField`1.RaiseOnValueChanged
  id: RaiseOnValueChanged
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: RaiseOnValueChanged()
  nameWithType: ViewModelField<T>.RaiseOnValueChanged()
  fullName: Benday.Presentation.ViewModelField<T>.RaiseOnValueChanged()
  type: Method
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: RaiseOnValueChanged
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 88
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Raises the OnValueChanged event.
  example: []
  syntax:
    content: public virtual void RaiseOnValueChanged()
    content.vb: Public Overridable Sub RaiseOnValueChanged()
  overload: Benday.Presentation.ViewModelField`1.RaiseOnValueChanged*
  nameWithType.vb: ViewModelField(Of T).RaiseOnValueChanged()
  fullName.vb: Benday.Presentation.ViewModelField(Of T).RaiseOnValueChanged()
- uid: Benday.Presentation.ViewModelField`1.IsVisible
  commentId: P:Benday.Presentation.ViewModelField`1.IsVisible
  id: IsVisible
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: ViewModelField<T>.IsVisible
  fullName: Benday.Presentation.ViewModelField<T>.IsVisible
  type: Property
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: IsVisible
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 104
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Should the field be visible on the form?
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: Benday.Presentation.ViewModelField`1.IsVisible*
  implements:
  - Benday.Presentation.IVisibleField.IsVisible
  nameWithType.vb: ViewModelField(Of T).IsVisible
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsVisible
- uid: Benday.Presentation.ViewModelField`1.IsValid
  commentId: P:Benday.Presentation.ViewModelField`1.IsValid
  id: IsValid
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ViewModelField<T>.IsValid
  fullName: Benday.Presentation.ViewModelField<T>.IsValid
  type: Property
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: IsValid
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 125
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: >-
    Represents the validation status of this field.  If IsValid is false, then ValidationMessage should contain a message.

    NOTE: this class does not perform any validation logic on its own.  It is up to the consumer to set this value and if necessary the 

    ValidationMessage value.
  example: []
  syntax:
    content: public bool IsValid { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: Benday.Presentation.ViewModelField`1.IsValid*
  nameWithType.vb: ViewModelField(Of T).IsValid
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsValid
- uid: Benday.Presentation.ViewModelField`1.IsEnabled
  commentId: P:Benday.Presentation.ViewModelField`1.IsEnabled
  id: IsEnabled
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: ViewModelField<T>.IsEnabled
  fullName: Benday.Presentation.ViewModelField<T>.IsEnabled
  type: Property
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: IsEnabled
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 144
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Should the field be enabled on the form?
  example: []
  syntax:
    content: public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEnabled As Boolean
  overload: Benday.Presentation.ViewModelField`1.IsEnabled*
  nameWithType.vb: ViewModelField(Of T).IsEnabled
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsEnabled
- uid: Benday.Presentation.ViewModelField`1.ValidationMessage
  commentId: P:Benday.Presentation.ViewModelField`1.ValidationMessage
  id: ValidationMessage
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: ValidationMessage
  nameWithType: ViewModelField<T>.ValidationMessage
  fullName: Benday.Presentation.ViewModelField<T>.ValidationMessage
  type: Property
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: ValidationMessage
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 164
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: >-
    Gets or sets the ValidationMessage property. This observable property. This is intended to be displayed when IsValid is false.

    NOTE: this class does not do any validation logic on its own.  It is up to the consumer to set this value.
  example: []
  syntax:
    content: public string ValidationMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ValidationMessage As String
  overload: Benday.Presentation.ViewModelField`1.ValidationMessage*
  nameWithType.vb: ViewModelField(Of T).ValidationMessage
  fullName.vb: Benday.Presentation.ViewModelField(Of T).ValidationMessage
- uid: Benday.Presentation.ViewModelField`1.ToString
  commentId: M:Benday.Presentation.ViewModelField`1.ToString
  id: ToString
  parent: Benday.Presentation.ViewModelField`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ViewModelField<T>.ToString()
  fullName: Benday.Presentation.ViewModelField<T>.ToString()
  type: Method
  source:
    remote:
      path: Benday.Presentation/ViewModelField.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: ToString
    path: ../Benday.Presentation/ViewModelField.cs
    startLine: 182
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Returns the Value property of this field as a string. If Value is null, returns String.Empty.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Benday.Presentation.ViewModelField`1.ToString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: ViewModelField(Of T).ToString()
  fullName.vb: Benday.Presentation.ViewModelField(Of T).ToString()
references:
- uid: Benday.Presentation
  commentId: N:Benday.Presentation
  href: Benday.html
  name: Benday.Presentation
  nameWithType: Benday.Presentation
  fullName: Benday.Presentation
  spec.csharp:
  - uid: Benday
    name: Benday
    href: Benday.html
  - name: .
  - uid: Benday.Presentation
    name: Presentation
    href: Benday.Presentation.html
  spec.vb:
  - uid: Benday
    name: Benday
    href: Benday.html
  - name: .
  - uid: Benday.Presentation
    name: Presentation
    href: Benday.Presentation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Benday.Presentation.ViewModelBase
  commentId: T:Benday.Presentation.ViewModelBase
  parent: Benday.Presentation
  href: Benday.Presentation.ViewModelBase.html
  name: ViewModelBase
  nameWithType: ViewModelBase
  fullName: Benday.Presentation.ViewModelBase
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Benday.Presentation.IVisibleField
  commentId: T:Benday.Presentation.IVisibleField
  parent: Benday.Presentation
  href: Benday.Presentation.IVisibleField.html
  name: IVisibleField
  nameWithType: IVisibleField
  fullName: Benday.Presentation.IVisibleField
- uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  commentId: M:Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  parent: Benday.Presentation.ViewModelBase
  isExternal: true
  href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  name: RaisePropertyChanged(string)
  nameWithType: ViewModelBase.RaisePropertyChanged(string)
  fullName: Benday.Presentation.ViewModelBase.RaisePropertyChanged(string)
  nameWithType.vb: ViewModelBase.RaisePropertyChanged(String)
  fullName.vb: Benday.Presentation.ViewModelBase.RaisePropertyChanged(String)
  name.vb: RaisePropertyChanged(String)
  spec.csharp:
  - uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
    name: RaisePropertyChanged
    href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
    name: RaisePropertyChanged
    href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Benday.Presentation.ViewModelBase.PropertyChanged
  commentId: E:Benday.Presentation.ViewModelBase.PropertyChanged
  parent: Benday.Presentation.ViewModelBase
  href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_PropertyChanged
  name: PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
  fullName: Benday.Presentation.ViewModelBase.PropertyChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Benday.Presentation.ViewModelField`1.#ctor*
  commentId: Overload:Benday.Presentation.ViewModelField`1.#ctor
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1__ctor
  name: ViewModelField
  nameWithType: ViewModelField<T>.ViewModelField
  fullName: Benday.Presentation.ViewModelField<T>.ViewModelField
  nameWithType.vb: ViewModelField(Of T).New
  fullName.vb: Benday.Presentation.ViewModelField(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Benday.Presentation.ViewModelField`1.Value*
  commentId: Overload:Benday.Presentation.ViewModelField`1.Value
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_Value
  name: Value
  nameWithType: ViewModelField<T>.Value
  fullName: Benday.Presentation.ViewModelField<T>.Value
  nameWithType.vb: ViewModelField(Of T).Value
  fullName.vb: Benday.Presentation.ViewModelField(Of T).Value
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Benday.Presentation.ViewModelField`1.RaiseOnValueChanged*
  commentId: Overload:Benday.Presentation.ViewModelField`1.RaiseOnValueChanged
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_RaiseOnValueChanged
  name: RaiseOnValueChanged
  nameWithType: ViewModelField<T>.RaiseOnValueChanged
  fullName: Benday.Presentation.ViewModelField<T>.RaiseOnValueChanged
  nameWithType.vb: ViewModelField(Of T).RaiseOnValueChanged
  fullName.vb: Benday.Presentation.ViewModelField(Of T).RaiseOnValueChanged
- uid: Benday.Presentation.ViewModelField`1.IsVisible*
  commentId: Overload:Benday.Presentation.ViewModelField`1.IsVisible
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_IsVisible
  name: IsVisible
  nameWithType: ViewModelField<T>.IsVisible
  fullName: Benday.Presentation.ViewModelField<T>.IsVisible
  nameWithType.vb: ViewModelField(Of T).IsVisible
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsVisible
- uid: Benday.Presentation.IVisibleField.IsVisible
  commentId: P:Benday.Presentation.IVisibleField.IsVisible
  parent: Benday.Presentation.IVisibleField
  href: Benday.Presentation.IVisibleField.html#Benday_Presentation_IVisibleField_IsVisible
  name: IsVisible
  nameWithType: IVisibleField.IsVisible
  fullName: Benday.Presentation.IVisibleField.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Benday.Presentation.ViewModelField`1.IsValid*
  commentId: Overload:Benday.Presentation.ViewModelField`1.IsValid
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_IsValid
  name: IsValid
  nameWithType: ViewModelField<T>.IsValid
  fullName: Benday.Presentation.ViewModelField<T>.IsValid
  nameWithType.vb: ViewModelField(Of T).IsValid
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsValid
- uid: Benday.Presentation.ViewModelField`1.IsEnabled*
  commentId: Overload:Benday.Presentation.ViewModelField`1.IsEnabled
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_IsEnabled
  name: IsEnabled
  nameWithType: ViewModelField<T>.IsEnabled
  fullName: Benday.Presentation.ViewModelField<T>.IsEnabled
  nameWithType.vb: ViewModelField(Of T).IsEnabled
  fullName.vb: Benday.Presentation.ViewModelField(Of T).IsEnabled
- uid: Benday.Presentation.ViewModelField`1.ValidationMessage*
  commentId: Overload:Benday.Presentation.ViewModelField`1.ValidationMessage
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_ValidationMessage
  name: ValidationMessage
  nameWithType: ViewModelField<T>.ValidationMessage
  fullName: Benday.Presentation.ViewModelField<T>.ValidationMessage
  nameWithType.vb: ViewModelField(Of T).ValidationMessage
  fullName.vb: Benday.Presentation.ViewModelField(Of T).ValidationMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Benday.Presentation.ViewModelField`1.ToString*
  commentId: Overload:Benday.Presentation.ViewModelField`1.ToString
  href: Benday.Presentation.ViewModelField-1.html#Benday_Presentation_ViewModelField_1_ToString
  name: ToString
  nameWithType: ViewModelField<T>.ToString
  fullName: Benday.Presentation.ViewModelField<T>.ToString
  nameWithType.vb: ViewModelField(Of T).ToString
  fullName.vb: Benday.Presentation.ViewModelField(Of T).ToString
