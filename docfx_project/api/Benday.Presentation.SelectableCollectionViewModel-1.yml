### YamlMime:ManagedReference
items:
- uid: Benday.Presentation.SelectableCollectionViewModel`1
  commentId: T:Benday.Presentation.SelectableCollectionViewModel`1
  id: SelectableCollectionViewModel`1
  parent: Benday.Presentation
  children:
  - Benday.Presentation.SelectableCollectionViewModel`1.#ctor
  - Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  - Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0},`0)
  - Benday.Presentation.SelectableCollectionViewModel`1.Add(`0)
  - Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections
  - Benday.Presentation.SelectableCollectionViewModel`1.Clear
  - Benday.Presentation.SelectableCollectionViewModel`1.Count
  - Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems
  - Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber
  - Benday.Presentation.SelectableCollectionViewModel`1.Initialize(System.Collections.Generic.IEnumerable{`0})
  - Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled
  - Benday.Presentation.SelectableCollectionViewModel`1.IsValid
  - Benday.Presentation.SelectableCollectionViewModel`1.Items
  - Benday.Presentation.SelectableCollectionViewModel`1.ItemsPropertyName
  - Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - Benday.Presentation.SelectableCollectionViewModel`1.OnItemSelected
  - Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem(System.Boolean)
  - Benday.Presentation.SelectableCollectionViewModel`1.Remove(`0)
  - Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem
  - Benday.Presentation.SelectableCollectionViewModel`1._Items
  langs:
  - csharp
  - vb
  name: SelectableCollectionViewModel<T>
  nameWithType: SelectableCollectionViewModel<T>
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>
  type: Class
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: SelectableCollectionViewModel
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 13
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: >-
    View model class for representing a collection of objects that implements ISelectable. By default it only allows one item to be selected at a time and it will

    manage the IsSelected property of the items in the collection.  If you want to allow multiple selections, set AllowMultipleSelections to true.
  example: []
  syntax:
    content: 'public class SelectableCollectionViewModel<T> : ViewModelBase, INotifyPropertyChanged where T : class, ISelectable'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Class SelectableCollectionViewModel(Of T As {Class, ISelectable}) Inherits ViewModelBase Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - Benday.Presentation.ViewModelBase
  derivedClasses:
  - Benday.Presentation.FilterableListViewModel`1
  - Benday.Presentation.SingleSelectListViewModel
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  - Benday.Presentation.ViewModelBase.PropertyChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SelectableCollectionViewModel(Of T)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T)
  name.vb: SelectableCollectionViewModel(Of T)
- uid: Benday.Presentation.SelectableCollectionViewModel`1._Items
  commentId: F:Benday.Presentation.SelectableCollectionViewModel`1._Items
  id: _Items
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: _Items
  nameWithType: SelectableCollectionViewModel<T>._Items
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>._Items
  type: Field
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: _Items
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 15
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: protected ObservableCollection<T> _Items
    return:
      type: System.Collections.ObjectModel.ObservableCollection{{T}}
    content.vb: Protected _Items As ObservableCollection(Of T)
  nameWithType.vb: SelectableCollectionViewModel(Of T)._Items
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T)._Items
- uid: Benday.Presentation.SelectableCollectionViewModel`1.#ctor
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.#ctor
  id: '#ctor'
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: SelectableCollectionViewModel()
  nameWithType: SelectableCollectionViewModel<T>.SelectableCollectionViewModel()
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectableCollectionViewModel()
  type: Constructor
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: .ctor
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 17
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: public SelectableCollectionViewModel()
    content.vb: Public Sub New()
  overload: Benday.Presentation.SelectableCollectionViewModel`1.#ctor*
  nameWithType.vb: SelectableCollectionViewModel(Of T).New()
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).New()
  name.vb: New()
- uid: Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber
  id: HasOnItemSelectedSubscriber
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: HasOnItemSelectedSubscriber
  nameWithType: SelectableCollectionViewModel<T>.HasOnItemSelectedSubscriber
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.HasOnItemSelectedSubscriber
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: HasOnItemSelectedSubscriber
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 25
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Utility property to determine if the view model has a subscriber to the OnItemSelected event.
  example: []
  syntax:
    content: public bool HasOnItemSelectedSubscriber { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasOnItemSelectedSubscriber As Boolean
  overload: Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber*
  nameWithType.vb: SelectableCollectionViewModel(Of T).HasOnItemSelectedSubscriber
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).HasOnItemSelectedSubscriber
- uid: Benday.Presentation.SelectableCollectionViewModel`1.OnItemSelected
  commentId: E:Benday.Presentation.SelectableCollectionViewModel`1.OnItemSelected
  id: OnItemSelected
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: OnItemSelected
  nameWithType: SelectableCollectionViewModel<T>.OnItemSelected
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.OnItemSelected
  type: Event
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: OnItemSelected
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 36
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Event that is raised when an item is selected.
  example: []
  syntax:
    content: public event EventHandler? OnItemSelected
    return:
      type: System.EventHandler
    content.vb: Public Event OnItemSelected As EventHandler
  nameWithType.vb: SelectableCollectionViewModel(Of T).OnItemSelected
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).OnItemSelected
- uid: Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  id: '#ctor(System.Collections.ObjectModel.ObservableCollection{`0})'
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: SelectableCollectionViewModel(ObservableCollection<T>)
  nameWithType: SelectableCollectionViewModel<T>.SelectableCollectionViewModel(ObservableCollection<T>)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectableCollectionViewModel(System.Collections.ObjectModel.ObservableCollection<T>)
  type: Constructor
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: .ctor
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 51
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Initializes a new instance of the SelectableCollectionViewModel class with existing items or an existing ObservableCollection instance.
  example: []
  syntax:
    content: public SelectableCollectionViewModel(ObservableCollection<T> values)
    parameters:
    - id: values
      type: System.Collections.ObjectModel.ObservableCollection{{T}}
      description: ''
    content.vb: Public Sub New(values As ObservableCollection(Of T))
  overload: Benday.Presentation.SelectableCollectionViewModel`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: SelectableCollectionViewModel(Of T).New(ObservableCollection(Of T))
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).New(System.Collections.ObjectModel.ObservableCollection(Of T))
  name.vb: New(ObservableCollection(Of T))
- uid: Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0},`0)
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0},`0)
  id: '#ctor(System.Collections.ObjectModel.ObservableCollection{`0},`0)'
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: SelectableCollectionViewModel(ObservableCollection<T>, T)
  nameWithType: SelectableCollectionViewModel<T>.SelectableCollectionViewModel(ObservableCollection<T>, T)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectableCollectionViewModel(System.Collections.ObjectModel.ObservableCollection<T>, T)
  type: Constructor
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: .ctor
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 67
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Initializes a new instance of the SelectableCollectionViewModel class with existing items or an existing ObservableCollection instance.
  example: []
  syntax:
    content: public SelectableCollectionViewModel(ObservableCollection<T> values, T selectedItem)
    parameters:
    - id: values
      type: System.Collections.ObjectModel.ObservableCollection{{T}}
      description: ''
    - id: selectedItem
      type: '{T}'
      description: Item in the values collection that should be selected
    content.vb: Public Sub New(values As ObservableCollection(Of T), selectedItem As T)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: SelectableCollectionViewModel(Of T).New(ObservableCollection(Of T), T)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).New(System.Collections.ObjectModel.ObservableCollection(Of T), T)
  name.vb: New(ObservableCollection(Of T), T)
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Initialize(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.Initialize(System.Collections.Generic.IEnumerable{`0})
  id: Initialize(System.Collections.Generic.IEnumerable{`0})
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Initialize(IEnumerable<T>)
  nameWithType: SelectableCollectionViewModel<T>.Initialize(IEnumerable<T>)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Initialize(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Initialize
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 86
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Resets the collection to the specified values.
  example: []
  syntax:
    content: public virtual void Initialize(IEnumerable<T> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    content.vb: Public Overridable Sub Initialize(values As IEnumerable(Of T))
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Initialize*
  nameWithType.vb: SelectableCollectionViewModel(Of T).Initialize(IEnumerable(Of T))
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Initialize(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Initialize(IEnumerable(Of T))
- uid: Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem(System.Boolean)
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem(System.Boolean)
  id: RefreshSelectedItem(System.Boolean)
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: RefreshSelectedItem(bool)
  nameWithType: SelectableCollectionViewModel<T>.RefreshSelectedItem(bool)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.RefreshSelectedItem(bool)
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: RefreshSelectedItem
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 93
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: protected void RefreshSelectedItem(bool directAssign = false)
    parameters:
    - id: directAssign
      type: System.Boolean
    content.vb: Protected Sub RefreshSelectedItem(directAssign As Boolean = False)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem*
  nameWithType.vb: SelectableCollectionViewModel(Of T).RefreshSelectedItem(Boolean)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).RefreshSelectedItem(Boolean)
  name.vb: RefreshSelectedItem(Boolean)
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Clear
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.Clear
  id: Clear
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SelectableCollectionViewModel<T>.Clear()
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Clear()
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Clear
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 112
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Clears the collection.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Clear*
  nameWithType.vb: SelectableCollectionViewModel(Of T).Clear()
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Clear()
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Add(`0)
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.Add(`0)
  id: Add(`0)
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: SelectableCollectionViewModel<T>.Add(T)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Add(T)
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Add
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 125
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Adds an item to the collection.
  example: []
  syntax:
    content: public void Add(T addThis)
    parameters:
    - id: addThis
      type: '{T}'
      description: ''
    content.vb: Public Sub Add(addThis As T)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: SelectableCollectionViewModel(Of T).Add(T)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Add(T)
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Remove(`0)
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.Remove(`0)
  id: Remove(`0)
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: SelectableCollectionViewModel<T>.Remove(T)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Remove
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 142
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Removes an item from the collection.
  example: []
  syntax:
    content: public void Remove(T removeThis)
    parameters:
    - id: removeThis
      type: '{T}'
      description: ''
    content.vb: Public Sub Remove(removeThis As T)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: SelectableCollectionViewModel(Of T).Remove(T)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Remove(T)
- uid: Benday.Presentation.SelectableCollectionViewModel`1.ItemsPropertyName
  commentId: F:Benday.Presentation.SelectableCollectionViewModel`1.ItemsPropertyName
  id: ItemsPropertyName
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: ItemsPropertyName
  nameWithType: SelectableCollectionViewModel<T>.ItemsPropertyName
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.ItemsPropertyName
  type: Field
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: ItemsPropertyName
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 154
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: public readonly string ItemsPropertyName
    return:
      type: System.String
    content.vb: Public ReadOnly ItemsPropertyName As String
  nameWithType.vb: SelectableCollectionViewModel(Of T).ItemsPropertyName
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).ItemsPropertyName
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Items
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.Items
  id: Items
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: SelectableCollectionViewModel<T>.Items
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Items
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Items
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 159
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets or sets the collection of items.
  example: []
  syntax:
    content: public ObservableCollection<T> Items { get; protected set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{{T}}
    content.vb: Public Property Items As ObservableCollection(Of T)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Items*
  nameWithType.vb: SelectableCollectionViewModel(Of T).Items
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Items
- uid: Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: OnItemPropertyChanged(object?, PropertyChangedEventArgs)
  nameWithType: SelectableCollectionViewModel<T>.OnItemPropertyChanged(object?, PropertyChangedEventArgs)
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.OnItemPropertyChanged(object?, System.ComponentModel.PropertyChangedEventArgs)
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: OnItemPropertyChanged
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 221
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  syntax:
    content: protected virtual void OnItemPropertyChanged(object? sender, PropertyChangedEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
    content.vb: Protected Overridable Sub OnItemPropertyChanged(sender As Object, e As PropertyChangedEventArgs)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged*
  nameWithType.vb: SelectableCollectionViewModel(Of T).OnItemPropertyChanged(Object, PropertyChangedEventArgs)
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).OnItemPropertyChanged(Object, System.ComponentModel.PropertyChangedEventArgs)
  name.vb: OnItemPropertyChanged(Object, PropertyChangedEventArgs)
- uid: Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems
  commentId: M:Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems
  id: GetSelectedItems
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: GetSelectedItems()
  nameWithType: SelectableCollectionViewModel<T>.GetSelectedItems()
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.GetSelectedItems()
  type: Method
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: GetSelectedItems
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 259
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets the selected items.
  example: []
  syntax:
    content: public List<T> GetSelectedItems()
    return:
      type: System.Collections.Generic.List{{T}}
      description: Selected items in a new instance of List
    content.vb: Public Function GetSelectedItems() As List(Of T)
  overload: Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems*
  nameWithType.vb: SelectableCollectionViewModel(Of T).GetSelectedItems()
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).GetSelectedItems()
- uid: Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem
  id: SelectedItem
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: SelectedItem
  nameWithType: SelectableCollectionViewModel<T>.SelectedItem
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectedItem
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: SelectedItem
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 274
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets or sets the selected item.
  example: []
  syntax:
    content: public T? SelectedItem { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property SelectedItem As T
  overload: Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem*
  nameWithType.vb: SelectableCollectionViewModel(Of T).SelectedItem
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).SelectedItem
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Count
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.Count
  id: Count
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SelectableCollectionViewModel<T>.Count
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Count
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: Count
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 344
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets the number of items in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Benday.Presentation.SelectableCollectionViewModel`1.Count*
  nameWithType.vb: SelectableCollectionViewModel(Of T).Count
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Count
- uid: Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections
  id: AllowMultipleSelections
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: AllowMultipleSelections
  nameWithType: SelectableCollectionViewModel<T>.AllowMultipleSelections
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.AllowMultipleSelections
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: AllowMultipleSelections
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 369
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets or sets a value indicating whether multiple selections are allowed.
  example: []
  syntax:
    content: public bool AllowMultipleSelections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowMultipleSelections As Boolean
  overload: Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections*
  nameWithType.vb: SelectableCollectionViewModel(Of T).AllowMultipleSelections
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).AllowMultipleSelections
- uid: Benday.Presentation.SelectableCollectionViewModel`1.IsValid
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.IsValid
  id: IsValid
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: SelectableCollectionViewModel<T>.IsValid
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.IsValid
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: IsValid
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 389
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: >-
    Gets or sets a value indicating whether this view model is valid. 

    NOTE: this property does not do any validation, it is just a flag that can be used by the view.
  example: []
  syntax:
    content: public bool IsValid { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: Benday.Presentation.SelectableCollectionViewModel`1.IsValid*
  nameWithType.vb: SelectableCollectionViewModel(Of T).IsValid
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).IsValid
- uid: Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled
  commentId: P:Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled
  id: IsEnabled
  parent: Benday.Presentation.SelectableCollectionViewModel`1
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: SelectableCollectionViewModel<T>.IsEnabled
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.IsEnabled
  type: Property
  source:
    remote:
      path: Benday.Presentation/SelectableCollectionViewModel.cs
      branch: master
      repo: https://github.com/benday-inc/mvvm-presentation.git
    id: IsEnabled
    path: ../Benday.Presentation/SelectableCollectionViewModel.cs
    startLine: 408
  assemblies:
  - Benday.Presentation
  namespace: Benday.Presentation
  summary: Gets or sets a value indicating whether this view model is enabled.
  example: []
  syntax:
    content: public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEnabled As Boolean
  overload: Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled*
  nameWithType.vb: SelectableCollectionViewModel(Of T).IsEnabled
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).IsEnabled
references:
- uid: Benday.Presentation
  commentId: N:Benday.Presentation
  href: Benday.html
  name: Benday.Presentation
  nameWithType: Benday.Presentation
  fullName: Benday.Presentation
  spec.csharp:
  - uid: Benday
    name: Benday
    href: Benday.html
  - name: .
  - uid: Benday.Presentation
    name: Presentation
    href: Benday.Presentation.html
  spec.vb:
  - uid: Benday
    name: Benday
    href: Benday.html
  - name: .
  - uid: Benday.Presentation
    name: Presentation
    href: Benday.Presentation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Benday.Presentation.ViewModelBase
  commentId: T:Benday.Presentation.ViewModelBase
  parent: Benday.Presentation
  href: Benday.Presentation.ViewModelBase.html
  name: ViewModelBase
  nameWithType: ViewModelBase
  fullName: Benday.Presentation.ViewModelBase
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  commentId: M:Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
  parent: Benday.Presentation.ViewModelBase
  isExternal: true
  href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  name: RaisePropertyChanged(string)
  nameWithType: ViewModelBase.RaisePropertyChanged(string)
  fullName: Benday.Presentation.ViewModelBase.RaisePropertyChanged(string)
  nameWithType.vb: ViewModelBase.RaisePropertyChanged(String)
  fullName.vb: Benday.Presentation.ViewModelBase.RaisePropertyChanged(String)
  name.vb: RaisePropertyChanged(String)
  spec.csharp:
  - uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
    name: RaisePropertyChanged
    href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Benday.Presentation.ViewModelBase.RaisePropertyChanged(System.String)
    name: RaisePropertyChanged
    href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_RaisePropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Benday.Presentation.ViewModelBase.PropertyChanged
  commentId: E:Benday.Presentation.ViewModelBase.PropertyChanged
  parent: Benday.Presentation.ViewModelBase
  href: Benday.Presentation.ViewModelBase.html#Benday_Presentation_ViewModelBase_PropertyChanged
  name: PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
  fullName: Benday.Presentation.ViewModelBase.PropertyChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Collections.ObjectModel.ObservableCollection{{T}}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{`0}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: Benday.Presentation.SelectableCollectionViewModel`1.#ctor*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.#ctor
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1__ctor
  name: SelectableCollectionViewModel
  nameWithType: SelectableCollectionViewModel<T>.SelectableCollectionViewModel
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectableCollectionViewModel
  nameWithType.vb: SelectableCollectionViewModel(Of T).New
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).New
  name.vb: New
- uid: Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.HasOnItemSelectedSubscriber
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_HasOnItemSelectedSubscriber
  name: HasOnItemSelectedSubscriber
  nameWithType: SelectableCollectionViewModel<T>.HasOnItemSelectedSubscriber
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.HasOnItemSelectedSubscriber
  nameWithType.vb: SelectableCollectionViewModel(Of T).HasOnItemSelectedSubscriber
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).HasOnItemSelectedSubscriber
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Initialize*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Initialize
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Initialize_System_Collections_Generic_IEnumerable__0__
  name: Initialize
  nameWithType: SelectableCollectionViewModel<T>.Initialize
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Initialize
  nameWithType.vb: SelectableCollectionViewModel(Of T).Initialize
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Initialize
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.RefreshSelectedItem
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_RefreshSelectedItem_System_Boolean_
  name: RefreshSelectedItem
  nameWithType: SelectableCollectionViewModel<T>.RefreshSelectedItem
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.RefreshSelectedItem
  nameWithType.vb: SelectableCollectionViewModel(Of T).RefreshSelectedItem
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).RefreshSelectedItem
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Clear*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Clear
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Clear
  name: Clear
  nameWithType: SelectableCollectionViewModel<T>.Clear
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Clear
  nameWithType.vb: SelectableCollectionViewModel(Of T).Clear
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Clear
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Add*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Add
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Add__0_
  name: Add
  nameWithType: SelectableCollectionViewModel<T>.Add
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Add
  nameWithType.vb: SelectableCollectionViewModel(Of T).Add
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Add
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Remove*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Remove
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Remove__0_
  name: Remove
  nameWithType: SelectableCollectionViewModel<T>.Remove
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Remove
  nameWithType.vb: SelectableCollectionViewModel(Of T).Remove
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Remove
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Items*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Items
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Items
  name: Items
  nameWithType: SelectableCollectionViewModel<T>.Items
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Items
  nameWithType.vb: SelectableCollectionViewModel(Of T).Items
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Items
- uid: Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.OnItemPropertyChanged
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_OnItemPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  name: OnItemPropertyChanged
  nameWithType: SelectableCollectionViewModel<T>.OnItemPropertyChanged
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.OnItemPropertyChanged
  nameWithType.vb: SelectableCollectionViewModel(Of T).OnItemPropertyChanged
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).OnItemPropertyChanged
- uid: System.ComponentModel.PropertyChangedEventArgs
  commentId: T:System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.GetSelectedItems
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_GetSelectedItems
  name: GetSelectedItems
  nameWithType: SelectableCollectionViewModel<T>.GetSelectedItems
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.GetSelectedItems
  nameWithType.vb: SelectableCollectionViewModel(Of T).GetSelectedItems
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).GetSelectedItems
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.SelectedItem
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_SelectedItem
  name: SelectedItem
  nameWithType: SelectableCollectionViewModel<T>.SelectedItem
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.SelectedItem
  nameWithType.vb: SelectableCollectionViewModel(Of T).SelectedItem
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).SelectedItem
- uid: Benday.Presentation.SelectableCollectionViewModel`1.Count*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.Count
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_Count
  name: Count
  nameWithType: SelectableCollectionViewModel<T>.Count
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.Count
  nameWithType.vb: SelectableCollectionViewModel(Of T).Count
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.AllowMultipleSelections
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_AllowMultipleSelections
  name: AllowMultipleSelections
  nameWithType: SelectableCollectionViewModel<T>.AllowMultipleSelections
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.AllowMultipleSelections
  nameWithType.vb: SelectableCollectionViewModel(Of T).AllowMultipleSelections
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).AllowMultipleSelections
- uid: Benday.Presentation.SelectableCollectionViewModel`1.IsValid*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.IsValid
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_IsValid
  name: IsValid
  nameWithType: SelectableCollectionViewModel<T>.IsValid
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.IsValid
  nameWithType.vb: SelectableCollectionViewModel(Of T).IsValid
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).IsValid
- uid: Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled*
  commentId: Overload:Benday.Presentation.SelectableCollectionViewModel`1.IsEnabled
  href: Benday.Presentation.SelectableCollectionViewModel-1.html#Benday_Presentation_SelectableCollectionViewModel_1_IsEnabled
  name: IsEnabled
  nameWithType: SelectableCollectionViewModel<T>.IsEnabled
  fullName: Benday.Presentation.SelectableCollectionViewModel<T>.IsEnabled
  nameWithType.vb: SelectableCollectionViewModel(Of T).IsEnabled
  fullName.vb: Benday.Presentation.SelectableCollectionViewModel(Of T).IsEnabled
